{"version":3,"sources":["Context.js","Components/TimerLengthControl.js","Components/TimerControl.js","Components/Timer.js","App.js","index.js"],"names":["AppContext","React","createContext","AppProvider","children","useState","breakLength","setBreakLength","sessionLength","setSessionLength","breakTimer","setBreakTimer","sessionTimer","setSessionTimer","startStop","setStartStop","isTimerRunning","setIsTimerRunning","useEffect","time","setTimeout","timer","clearTimeout","Provider","value","increment","id","prev","decrement","handleStartStop","reset","togglePlayPauseBtn","focusable","useGlobalContext","useContext","TimerLengthControl","titleId","title","incId","decId","lengthId","length","decreaseOnMouseDown","clearOnMouseDown","className","onClick","onMouseDown","onMouseUp","TimerControl","audioRef","useRef","current","play","currentTime","pause","preload","ref","src","Timer","minutes","Math","floor","seconds","clockify","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c1fed9c.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { CgPlayButtonR, CgPlayPauseR } from \"react-icons/cg\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [breakLength, setBreakLength] = useState(5);\r\n    const [sessionLength, setSessionLength] = useState(25);\r\n    const [breakTimer, setBreakTimer] = useState();\r\n    const [sessionTimer, setSessionTimer] = useState();\r\n    const [startStop, setStartStop] = useState(false);\r\n    const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n    // const [mouseFunction, setMouseFunction] = useState(null);\r\n\r\n    const increment = (id) => {\r\n        if (!startStop) {\r\n            if (id === \"break-increment\") {\r\n                if (breakLength < 60) {\r\n                    setBreakLength((prev) => prev + 1);\r\n                }\r\n            } else if (id === \"session-increment\") {\r\n                if (sessionLength < 60) {\r\n                    setSessionLength((prev) => prev + 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const decrement = (id) => {\r\n        if (!startStop) {\r\n            if (id === \"break-decrement\") {\r\n                if (breakLength > 1) {\r\n                    setBreakLength((prev) => prev - 1);\r\n                }\r\n            } else if (id === \"session-decrement\") {\r\n                if (sessionLength > 1) {\r\n                    setSessionLength((prev) => prev - 1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleStartStop = () => {\r\n        if (startStop) {\r\n            setStartStop(false);\r\n        } else {\r\n            setStartStop(true);\r\n        }\r\n    };\r\n\r\n    const togglePlayPauseBtn = () => {\r\n        if (startStop === true) {\r\n            return <CgPlayPauseR aria-hidden={true} focusable={false} />;\r\n        } else {\r\n            return <CgPlayButtonR aria-hidden={true} focusable={false} />;\r\n        }\r\n    };\r\n\r\n    // const decreaseOnMouseDown = () => {\r\n    //     setMouseFunction(\r\n    //         setInterval(() => {\r\n    //             setSessionLength((prev) => prev - 1);\r\n    //         }, 100)\r\n    //     );\r\n    // };\r\n\r\n    // const clearOnMouseDown = () => {\r\n    //     clearInterval(mouseFunction);\r\n    //     setMouseFunction(null);\r\n    // };\r\n\r\n    const reset = () => {\r\n        setStartStop(false);\r\n        setBreakLength(5);\r\n        setSessionLength(25);\r\n        setSessionTimer(sessionLength * 60);\r\n        setBreakTimer(breakLength * 60);\r\n        setIsTimerRunning(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (startStop) {\r\n            let time = null;\r\n            if (sessionTimer >= 0 && !isTimerRunning) {\r\n                time = setTimeout(() => {\r\n                    setSessionTimer((timer) => timer - 1);\r\n                    setBreakTimer(breakLength * 60);\r\n                }, 1000);\r\n            } else if (breakTimer >= 0 && isTimerRunning) {\r\n                time = setTimeout(() => {\r\n                    setBreakTimer((timer) => timer - 1);\r\n                    setSessionTimer(sessionLength * 60);\r\n                }, 1000);\r\n            } else if (sessionTimer <= 0) {\r\n                setIsTimerRunning(true);\r\n            } else if (breakTimer <= 0) {\r\n                setIsTimerRunning(false);\r\n            }\r\n            return () => {\r\n                clearTimeout(time);\r\n            };\r\n        }\r\n    }, [breakTimer, sessionTimer, startStop, isTimerRunning]);\r\n\r\n    useEffect(() => {\r\n        setSessionTimer(sessionLength * 60);\r\n        setBreakTimer(breakLength * 60);\r\n    }, [breakLength, sessionLength]);\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                breakLength,\r\n                sessionLength,\r\n                sessionTimer,\r\n                breakTimer,\r\n                isTimerRunning,\r\n                setBreakLength,\r\n                setSessionLength,\r\n                increment,\r\n                decrement,\r\n                handleStartStop,\r\n                reset,\r\n                togglePlayPauseBtn,\r\n                // decreaseOnMouseDown,\r\n                // clearOnMouseDown,\r\n            }}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n};\r\n","import React from \"react\";\r\nimport { FaArrowDown, FaArrowUp } from \"react-icons/fa\";\r\nimport { useGlobalContext } from \"../Context\";\r\n\r\nconst TimerLengthControl = ({\r\n    titleId,\r\n    title,\r\n    incId,\r\n    decId,\r\n    lengthId,\r\n    length,\r\n}) => {\r\n    const { decrement, increment, decreaseOnMouseDown, clearOnMouseDown } =\r\n        useGlobalContext();\r\n    return (\r\n        <div className=\"length-controller\">\r\n            <h3 className=\"length-title\" id={titleId}>\r\n                {title}\r\n            </h3>\r\n            <div className=\"decinc-btn-container\">\r\n                <button\r\n                    className=\"decinc-btn-child\"\r\n                    id={decId}\r\n                    onClick={() => decrement(decId)}\r\n                    onMouseDown={decreaseOnMouseDown}\r\n                    onMouseUp={clearOnMouseDown}\r\n                >\r\n                    <span className=\"label-hidden\">Decrement Length</span>\r\n                    <FaArrowDown aria-hidden={true} focusable={false} />\r\n                </button>\r\n                <p className=\"length-id\" id={lengthId}>\r\n                    {length}\r\n                </p>\r\n                <button\r\n                    className=\"decinc-btn-child\"\r\n                    id={incId}\r\n                    onClick={() => increment(incId)}\r\n                >\r\n                    <span className=\"label-hidden\">Increment Length</span>\r\n                    <FaArrowUp aria-hidden={true} focusable={false} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimerLengthControl;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useGlobalContext } from \"../Context\";\r\nimport { BsArrowRepeat } from \"react-icons/bs\";\r\n\r\nconst TimerControl = () => {\r\n    const {\r\n        handleStartStop,\r\n        reset,\r\n        sessionTimer,\r\n        breakTimer,\r\n        togglePlayPauseBtn,\r\n    } = useGlobalContext();\r\n\r\n    const audioRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (sessionTimer === 0 || breakTimer === 0) {\r\n            audioRef.current.play();\r\n            audioRef.current.currentTime = 1;\r\n        }\r\n    }, [sessionTimer, breakTimer]);\r\n\r\n    return (\r\n        <div id=\"timer-control-container\">\r\n            <button\r\n                id=\"start_stop\"\r\n                className=\"timer-btn-control\"\r\n                onClick={handleStartStop}\r\n            >\r\n                <span className=\"label-hidden\">Start/Stop</span>\r\n                {togglePlayPauseBtn()}\r\n            </button>\r\n            <button\r\n                id=\"reset\"\r\n                className=\"timer-btn-control\"\r\n                onClick={() => {\r\n                    audioRef.current.pause();\r\n                    audioRef.current.currentTime = 0;\r\n                    reset();\r\n                }}\r\n            >\r\n                <span className=\"label-hidden\">Reset</span>\r\n                <BsArrowRepeat aria-hidden={true} focusable={false} />\r\n            </button>\r\n            <audio\r\n                id=\"beep\"\r\n                preload=\"auto\"\r\n                ref={audioRef}\r\n                src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimerControl;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../Context\";\r\nimport TimerControl from \"./TimerControl\";\r\n\r\nconst Timer = () => {\r\n    const { breakTimer, sessionTimer, isTimerRunning } = useGlobalContext();\r\n\r\n    const clockify = () => {\r\n        const timer = !isTimerRunning ? sessionTimer : breakTimer;\r\n        let minutes = Math.floor(timer / 60);\r\n        let seconds = timer - minutes * 60;\r\n        seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n        return minutes + \":\" + seconds;\r\n    };\r\n\r\n    return (\r\n        <section id=\"timer-container\">\r\n            <div id=\"timer-display-container\">\r\n                <h3 id=\"timer-label\">\r\n                    {!isTimerRunning ? \"Session\" : \"Break\"}\r\n                </h3>\r\n                <p id=\"time-left\">{clockify()}</p>\r\n            </div>\r\n            <TimerControl />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./Context\";\r\nimport TimerLengthControl from \"./Components/TimerLengthControl\";\r\nimport Timer from \"./Components/Timer\";\r\n\r\nconst App = () => {\r\n    const { breakLength, sessionLength } = useGlobalContext();\r\n\r\n    return (\r\n        <div id=\"app-container\">\r\n            <section id=\"app-header\">\r\n                <h1>25 + 5 Clock</h1>\r\n            </section>\r\n            <section id=\"timer-length-controls\">\r\n                <TimerLengthControl\r\n                    titleId=\"break-label\"\r\n                    title=\"Break Length\"\r\n                    incId=\"break-increment\"\r\n                    decId=\"break-decrement\"\r\n                    lengthId=\"break-length\"\r\n                    length={breakLength}\r\n                />\r\n                <TimerLengthControl\r\n                    titleId=\"session-label\"\r\n                    title=\"Session Length\"\r\n                    incId=\"session-increment\"\r\n                    decId=\"session-decrement\"\r\n                    lengthId=\"session-length\"\r\n                    length={sessionLength}\r\n                />\r\n            </section>\r\n            <Timer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AppProvider } from \"./Context\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppProvider>\n            <App />\n        </AppProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}